{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QACpC,IAAIC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBAIpC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,EAAUQ,MAAAP,IAGpBG,EAAO,C,SAAEJ,EAAUQ,MAAAP,GAAQ,GAE9BA,EAAM,G,CAbXR,EAAKgB,iBAAiB,UAgBtB,SAAsBC,GAQpB,GAPAA,EAAEC,iBACFf,EAAQgB,OAAOF,EAAEG,cAAcL,MAAMM,OACrCC,QAAQC,IAAIpB,GACZC,EAAOe,OAAOF,EAAEG,cAAcI,KAAKH,OACnCC,QAAQC,IAAInB,GACZC,EAASc,OAAOF,EAAEG,cAAcK,OAAOJ,OACvCC,QAAQC,IAAIlB,GACRF,GAAS,GAAKC,GAAQ,GAAKC,EAAS,EACtC,IAAK,IAAIqB,EAAW,EAAGA,GAAYrB,EAAQqB,GAAY,EACrDvB,GAASC,EACTE,EAAcoB,EAAUvB,GAC3BwB,MAAK,EAACpB,SAAEA,EAAUQ,MAAAa,MACjBC,EAAA/B,GAASgC,OAAOC,QAChB,uBAAqBxB,QAAiBqB,OACpCN,QAAMC,IAAI,uBAAqBhB,QAAiBqB,MAAU,IAE7DI,OAAM,EAACzB,SAAEA,EAAUQ,MAAAkB,MAClBJ,EAAA/B,GAASgC,OAAOI,QAChB,sBAAoB3B,QAAiB0B,OACnCX,QAAMC,IAAI,sBAAoBhB,QAAe0B,MAAU,SAEzDJ,EAAA/B,GAASgC,OAAOK,QAAQ,0B","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nlet delay = document.querySelector('input[name=\"delay\"]');\nlet step = document.querySelector('input[name=\"step\"]');\nlet amount = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n  }, delay)})\n};\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  delay = Number(e.currentTarget.delay.value);\n  console.log(delay)\n  step = Number(e.currentTarget.step.value);\n  console.log(step)\n  amount = Number(e.currentTarget.amount.value);\n  console.log(amount)\n  if (delay >= 0 && step >= 0 && amount > 0) {\n    for (let position = 1; position <= amount; position += 1) {\n      delay += step;\n      createPromise(position, delay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(\n    `✅ Fulfilled promise ${position} in ${delay}ms`);\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`)\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(\n    `❌ Rejected promise ${position} in ${delay}ms`);\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`)\n  }) } } else {\n    Notiflix.Notify.warning('Memento te hominem esse');} \n  }"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","e","preventDefault","Number","currentTarget","value","console","log","step","amount","position1","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","warning"],"version":3,"file":"03-promises.cc1836c1.js.map"}